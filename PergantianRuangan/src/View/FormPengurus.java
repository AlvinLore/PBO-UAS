/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Controller.FormController;
import Model.DatabaseDeleter;
import Model.DatabaseRetriever;
import Model.DatabaseUpdater;
import Model.Permintaan;
import Model.Pertemuan;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class FormPengurus extends javax.swing.JPanel {
    private DatabaseRetriever databaseRetriever;
    private DatabaseDeleter databaseDeleter;
    /**
     * Creates new form DaftarPermintaan
     */
    public FormPengurus() {
        initComponents();
        databaseRetriever = new DatabaseRetriever();
        loadPermintaanTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ruangTextField = new javax.swing.JTextField();
        pindahButton = new javax.swing.JButton();
        tolakButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        permintaanTable = new javax.swing.JTable();

        jLabel1.setText("ID:");

        jLabel2.setText("Atur Ruang (Pindah):");

        pindahButton.setText("Pindah");
        pindahButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pindahButtonActionPerformed(evt);
            }
        });

        tolakButton.setText("Tolak");
        tolakButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tolakButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idTextField))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ruangTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pindahButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(tolakButton)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tolakButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ruangTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pindahButton))
                .addContainerGap())
        );

        permintaanTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Pertemuan", "Tanggal (Sebelum)", "Tanggal (Setelah)", "Sesi (Sebelum)", "Sesi (Setelah)", "Waktu Mulai (Setelah)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(permintaanTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tolakButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tolakButtonActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(idTextField.getText());
        databaseRetriever = new DatabaseRetriever();
        boolean existingPermintaan = databaseRetriever.checkPermintaanExist(id);
        if (existingPermintaan == false) {
            JOptionPane.showMessageDialog(this, "Permintaan dengan ID tersebut tidak ditemukan.");
            return;
        }
        databaseDeleter = new DatabaseDeleter();
        databaseDeleter.deleteDataPermintaan(id);
        this.setVisible(false);
        JOptionPane.showMessageDialog(this, "Permintaan dengan id = "+ id +" telah ditolak.");
        revalidate();
        repaint();
    }//GEN-LAST:event_tolakButtonActionPerformed

    private void pindahButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pindahButtonActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(idTextField.getText());
        String ruang = ruangTextField.getText();
        databaseRetriever = new DatabaseRetriever();
        boolean existingPertemuan = databaseRetriever.checkPertemuanExist(id);
        
        if (existingPertemuan == false) {
            JOptionPane.showMessageDialog(this, "Pertemuan dengan ID tersebut tidak ditemukan.");
            return;
        }
        Pertemuan pertemuan = databaseRetriever.retrieveDataPertemuan(id);
        boolean existingPermintaan = databaseRetriever.checkPermintaanExist(id);
        
        if (existingPermintaan == false) {
            JOptionPane.showMessageDialog(this, "Tidak ada permintaan untuk mengganti ruangan pada id tersebut.");
            return;
        }
        
        Permintaan permintaan = databaseRetriever.retrieveDataPermintaan(id);
        pertemuan.setTanggal(permintaan.getTanggalSesudah());
        pertemuan.setSesi(permintaan.getSesiSesudah());
        pertemuan.setWaktuMulai(permintaan.getWaktuMulai());
        pertemuan.setRuang(ruang);
        pertemuan.setPengganti("Ya");
        
        FormController form = new FormController(pertemuan);
        
        if(!form.validateUpdatePertemuan()){
            List<String> errorMessages = form.getErrorMessages();
            String message = "Data Tidak Valid. Perbaiki error berikut:\n";
            for (String errorMessage : errorMessages) {
                message += (errorMessage + "\n");
            }
            JOptionPane.showMessageDialog(this, message);
        }else{
            // Mengupdate database pertemuan dan menghapus database permintaan
            databaseDeleter = new DatabaseDeleter();
            databaseDeleter.deleteDataPermintaan(id);
            DatabaseUpdater databaseUpdater = new DatabaseUpdater();
            databaseUpdater.updatePermintaan(pertemuan);
            this.setVisible(false);
            JOptionPane.showMessageDialog(this, "Pertemuan berhasil diupdate");
            revalidate();
            repaint();
        }
    }//GEN-LAST:event_pindahButtonActionPerformed

    private void loadPermintaanTable() {
        List<Permintaan> permintaanList = databaseRetriever.retrieveAllDataPermintaan();

        DefaultTableModel model = (DefaultTableModel) permintaanTable.getModel();
        model.setRowCount(0);

        for (Permintaan permintaan : permintaanList) {
            String waktuMulai = String.format("%02d:%02d", permintaan.getWaktuMulai().getJam(), permintaan.getWaktuMulai().getMenit());
            String tanggalSebelumStr = permintaan.getTanggalSebelum().toString();
            String tanggalSesudahStr = permintaan.getTanggalSesudah().toString();
            
            Object[] row = {
                permintaan.getId(),
                tanggalSebelumStr,
                tanggalSesudahStr,
                permintaan.getSesiSebelum(),
                permintaan.getSesiSesudah(),
                waktuMulai
            };
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField idTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable permintaanTable;
    private javax.swing.JButton pindahButton;
    private javax.swing.JTextField ruangTextField;
    private javax.swing.JButton tolakButton;
    // End of variables declaration//GEN-END:variables
}
