/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Model.CSVHandler;
import Model.DatabaseRetriever;
import Model.Pertemuan;
import java.time.LocalDate;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class DaftarPerkuliahan extends javax.swing.JPanel {
    private DatabaseRetriever databaseRetriever;
    /**
     * Creates new form DaftarPerkuliahan
     */
    public DaftarPerkuliahan() {
        initComponents();
        tanggalSpinner.setModel(new javax.swing.SpinnerDateModel());
        tanggalSpinner.setEditor(new javax.swing.JSpinner.DateEditor(tanggalSpinner, "dd/MM/yyyy"));
        databaseRetriever = new DatabaseRetriever();
        loadPertemuanTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        sesiSpinner = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        tanggalSpinner = new javax.swing.JSpinner();
        filterButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pertemuanTable = new javax.swing.JTable();
        csvButton = new javax.swing.JButton();
        pathTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        jLabel2.setText("Sesi:");

        sesiSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 4, 1));

        jLabel1.setText("Tanggal:");

        tanggalSpinner.setModel(new javax.swing.SpinnerDateModel());

        filterButton.setText("Filter");
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sesiSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(filterButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tanggalSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tanggalSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(sesiSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterButton)))
        );

        pertemuanTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Mata Kuliah", "Kelas", "Tanggal", "Sesi", "Waktu Mulai", "Ruang", "Pengganti"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(pertemuanTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        csvButton.setText("Export csv");
        csvButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csvButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Path:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csvButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(csvButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        // TODO add your handling code here:
        loadPertemuanTableFiltered();
    }//GEN-LAST:event_filterButtonActionPerformed

    private void csvButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csvButtonActionPerformed
        // TODO add your handling code here:
        String filePath = pathTextField.getText();

        if(filePath.equals("")){
            JOptionPane.showMessageDialog(this, "Silakan pilih path untuk output!");
        }
        else{
            //Ambil data
            databaseRetriever = new DatabaseRetriever();
            List<Pertemuan> pertemuanList = databaseRetriever.retrieveAllDataPertemuan();
    
            //Tulis file
            CSVHandler csvHandler = new CSVHandler();
            boolean isWritten = csvHandler.WriteCSV(filePath, pertemuanList);
            if(isWritten){
                JOptionPane.showMessageDialog(this, "Berhasil menyimpan file");
            }
            else{
                JOptionPane.showMessageDialog(this, "Gagal menyimpan file");
            }
        }
    }//GEN-LAST:event_csvButtonActionPerformed

    private void loadPertemuanTable() {
        List<Pertemuan> pertemuanList = databaseRetriever.retrieveAllDataPertemuan();

        DefaultTableModel model = (DefaultTableModel) pertemuanTable.getModel();
        model.setRowCount(0);

        for (Pertemuan pertemuan : pertemuanList) {
            String waktuMulai = String.format("%02d:%02d", pertemuan.getWaktuMulai().getJam(), pertemuan.getWaktuMulai().getMenit());
            String tanggalStr = pertemuan.getTanggal().toString();
            
            Object[] row = {
                pertemuan.getId(),
                pertemuan.getMataKuliah(),
                pertemuan.getKelas(),
                tanggalStr,
                pertemuan.getSesi(),
                waktuMulai,
                pertemuan.getRuang(),
                pertemuan.getPengganti()
            };
            model.addRow(row);
        }
    }
    
    private void loadPertemuanTableFiltered() {
        LocalDate tanggal;
        int sesi = (int) sesiSpinner.getValue();

        java.util.Date utilDate = (java.util.Date) tanggalSpinner.getValue();
        tanggal = utilDate.toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDate();
        List<Pertemuan> pertemuanList = databaseRetriever.retrieveFilteredPertemuan(tanggal, sesi);

        DefaultTableModel model = (DefaultTableModel) pertemuanTable.getModel();
        model.setRowCount(0);

        for (Pertemuan pertemuan : pertemuanList) {
            String waktuMulai = String.format("%02d:%02d", pertemuan.getWaktuMulai().getJam(), pertemuan.getWaktuMulai().getMenit());
            String tanggalStr = pertemuan.getTanggal().toString();
            
            Object[] row = {
                pertemuan.getId(),
                pertemuan.getMataKuliah(),
                pertemuan.getKelas(),
                tanggalStr,
                pertemuan.getSesi(),
                waktuMulai,
                pertemuan.getRuang(),
                pertemuan.getPengganti()
            };
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton csvButton;
    private javax.swing.JButton filterButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField pathTextField;
    private javax.swing.JTable pertemuanTable;
    private javax.swing.JSpinner sesiSpinner;
    private javax.swing.JSpinner tanggalSpinner;
    // End of variables declaration//GEN-END:variables
}
